[{"state":{"code":"sequenceDiagram\n    Actor Gateway\n    Gateway->>+AuthRoutes: POST \"/auth/renew\"\n    AuthRoutes->>+AuthService: renewAccessToken(refreshToken)\n    AuthService->>+AuthService: _renewAccessToken(refreshToken)\n    AuthService->>+AuthService: _generateAccessToken(auth)\n    AuthService-->>-AuthService: accessToken\n    AuthService-->>-AuthService: accessToken\n    AuthService-->>-AuthRoutes: accessToken\n    AuthRoutes-->>-Gateway: statusCodes \"OK\"","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1667972060067,"type":"manual","id":"c156ff4d-0ae5-4872-baec-0f0d64d9909a","name":"few-beach"},{"state":{"code":"sequenceDiagram\n    Actor Gateway\n    Gateway->>+UserRoutes: PUT \"/user/\"\n    UserRoutes->>+UserService: updateUserPassword(userId, oldPassword, newPassword)\n    UserService->>+UserRepository: updateUser(userId, email, username, passwordHash)\n    UserRepository->>+UserModel (DB): findById(userId)\n    UserModel (DB)-->>-UserRepository: user\n    UserRepository->>+UserSchema: save()\n    UserRepository-->>-UserService: updatedUser\n    UserService-->>-UserRoutes: updatedUser\n    UserRoutes-->>-Gateway: statusCodes \"OK\"","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1667937894652,"type":"manual","id":"9c1acfe3-22b0-4a3a-b9c0-57c0de612421","name":"happy-telephone"},{"state":{"code":"sequenceDiagram\n    Actor Gateway\n    Gateway->>+UserRoutes: POST \"/user/\"\n    UserRoutes->>+UserService: createUser(email, username, password)\n    UserService->>+UserRepository: createUser(email, username, passwordHash, confirmationCode)\n    UserRepository->>+UserModel (DB): create({params})\n    UserModel (DB)-->>-UserRepository: createdUser\n    UserRepository-->>-UserService: createdUser\n    UserService->>+nodeMailerConfig: sendConfirmationEmail(username, email, confirmationCode)  \n    UserService-->>-UserRoutes: createdUser\n    UserRoutes-->>-Gateway: statusCodes \"OK\"","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1667932789841,"type":"manual","id":"df9c52c3-06b5-4de6-82eb-4cea49dedc91","name":"obedient-doctor"},{"state":{"code":"sequenceDiagram\n    Actor Gateway\n    Gateway->>+UserRoutes: POST \"/user/\"\n    UserRoutes->>+UserService: createUser(email, username, password)\n    UserService->>+nodeMailerConfig: sendConfirmationEmail(username, email, confirmationCode)\n    UserService->>+UserRepository: createUser(email, username, passwordHash, confirmationCode)\n    UserRepository->>+UserModel (DB): create({params})\n    UserModel (DB)-->>-UserRepository: createdUser\n    UserRepository-->>-UserService: createdUser\n    UserService-->>-UserRoutes: createdUser\n    UserRoutes-->>-Gateway: statusCodes \"OK\"","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false,"editorMode":"code","panZoom":false},"time":1667931951571,"type":"manual","id":"62a0815c-68fc-4495-89f1-f5ce6f407a07","name":"uninterested-china"}]